// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(uuid())
  username       String
  profilePicture String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  models         Model[]
  outputImages   OutPutImages[]
}

model Model {
  id             String           @id @default(uuid())
  name           String
  type           ModelTypeEnum
  age            Int
  ethinicity     EthinicityEnum
  eyeColor       EyeColorEnum
  bald           Boolean
  userId         String
  triggeredWord  String?
  tensorPath     String?
  trainingStatus StatusEnum       @default(Pending)
  user           User             @relation(fields: [userId], references: [id])
  trainingImages TrainingImages[]
  outputImages   OutPutImages[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  falAiRequestId String?

  @@index([falAiRequestId])
}

model TrainingImages {
  id       String @id @default(uuid())
  imageUrl String @default("")
  modelId  String
  userId   String
  model    Model  @relation(fields: [modelId], references: [id])
}

model OutPutImages {
  id             String     @id @default(uuid())
  imageUrl       String
  modelId        String
  userId         String
  prompt         String
  status         StatusEnum @default(Pending)
  user           User       @relation(fields: [userId], references: [id])
  model          Model      @relation(fields: [modelId], references: [id])
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  falAiRequestId String?

  @@index([falAiRequestId])
}

model Packs {
  id         String       @id @default(uuid())
  name       String
  PackPrompt PackPrompt[]
}

model PackPrompt {
  id     String @id @default(uuid())
  prompt String
  packId String
  pack   Packs  @relation(fields: [packId], references: [id])
}

enum StatusEnum {
  Pending
  Completed
  Failed
  Generated
}

enum ModelTypeEnum {
  Men
  Women
  Others
}

enum EthinicityEnum {
  White
  Black
  AsianAmerican
  EastAsian
  SouthEastAsian
  SouthAsian
  MiddleEastern
  Pacific
  Hispanic
}

enum EyeColorEnum {
  Brown
  Blue
  Hazel
  Gray
}
